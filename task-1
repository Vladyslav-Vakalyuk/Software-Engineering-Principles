<?php


function loop_size(Node $node): int {
  $i=1;
      while($node->getNext()){
        $currentNode[] = $node;
        $node = $node->getNext();
        if (in_array($node, $currentNode, true)){
          $lastkey = array_key_last ($currentNode);
          $lastNode = $currentNode[$lastkey];
           $searchNode =  $node->getNext();
          $s = $searchNode;
          while($searchNode->getNext()){
              $searchNode = $searchNode->getNext();
             if($s === $searchNode ){

               return $i;
            }
             $i++;
          }
        }
    }
    
    
    
//class LoopSizeTest extends TestCase {
//public function testFixed() {
// $this->assertEquals(1, loop_size(Node::createChain(0, 1)));
// $this->assertEquals(23, loop_size(Node::createChain(8778, 23)));
//  $this->assertEquals(8778, loop_size(Node::createChain(23, 8778)));
//}
//}
