<?php

function planeSeat($a){
$seatLeftLetter = ['A', 'C'];
$seatMiddleLetter = ['D', 'F'];
$seatRightLetter = ['G', 'K'];
  
$seatFrontNumber = [1,20];
$seatMiddleNumber = [21,40];
$seatBackNumber = [40,60];
  
  $chair = '';
if(intval($a) >= $seatFrontNumber[0] && intval($a) <= $seatFrontNumber[1] ){
  $chair = 'Front';
}elseif(intval($a) >= $seatMiddleNumber[0] && intval($a) <= $seatMiddleNumber[1] ){
  $chair = 'Middle';
}elseif(intval($a) >= $seatBackNumber[0] && intval($a) <= $seatBackNumber[1] ){
  $chair = 'Back';
}else{
  return 'No Seat!!';
}
  
  if(strpos($a, $seatLeftLetter[0]) > 0 || strpos($a, $seatLeftLetter[1]) > 0 ){
    $chair .= '-Left';
  }elseif(strpos($a, $seatMiddleLetter[0]) > 0 || strpos($a, $seatMiddleLetter[1]) > 0 ){
    $chair .= '-Middle';
  }elseif(strpos($a, $seatRightLetter[0]) > 0 || strpos($a, $seatRightLetter[1]) > 0){
    $chair .= '-Right';
  }else{
    return 'No Seat!!';
  }
  
  return $chair;
  
}

//////////
// PHPUnit Test Examples:
// TODO: Replace examples and use TDD development by writing your own tests
//class MyTestCases extends TestCase
//{
//    private function revTest($actual, $expected) {
//        $this->assertEquals($expected, $actual);
//    }
//    public function testBasics() {
//    $this->revTest(planeSeat("2A"),"Front-Left");
//    $this->revTest(planeSeat("23D"),"Middle-Middle");
//    $this->revTest(planeSeat("49K"),"Back-Right");
//    $this->revTest(planeSeat("60A"),"Back-Left");
//    $this->revTest(planeSeat("61D"),"No Seat!!");
//    $this->revTest(planeSeat("30I"),"No Seat!!");
//    }
//}
